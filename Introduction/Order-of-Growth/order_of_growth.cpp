#include <iostream>
#include <iomanip>

void run_function_with_time_calculator(int arr[], int n, int (*function) (int[], int)) {
    // To get the high precision execution time in s
    clock_t start, end;
    start = clock();

    // Call your function here
    int sum = function(arr, n);

    // Ending the time of execution
    end = clock();

    std::cout << "SUM = " << sum << std::endl;
    double time_taken = double(end - start) / double(CLOCKS_PER_SEC);
    std::cout << "Time taken by program = " << std::fixed << time_taken << std::setprecision(5) << "s" << std::endl;
}


/*
    Order of growth is Linear.
*/
int getSum(int arr[], int n) {
    int sum = 0;
    for(int i = 0; i < n; i++) {
        sum += arr[i];
    }
    return sum;
}
int main() {

    int a[] = { 791, 56, 44, 699, 965, 531, 618, 484, 603, 477, 699, 842, 791, 874, 294, 117, 485, 214, 284, 213, 655, 810, 155, 56, 246, 493, 804, 401, 357, 44, 151, 654, 462, 440, 666, 460, 756, 393, 469, 46, 986, 770, 42, 133, 758, 810, 158, 95, 139, 107, 611, 257, 602, 176, 924, 276, 380, 420, 972, 973, 936, 294, 929, 591, 120, 106, 7, 756, 954, 717, 112, 867, 201, 566, 378, 421, 343, 89, 720, 320, 167, 143, 588, 532, 834, 612, 655, 150, 276, 10, 907, 960, 459, 737, 614, 650, 664, 12, 662, 983, 803, 56, 704, 255, 356, 966, 746, 486, 719, 496, 37, 891, 976, 242, 122, 839, 387, 976, 674, 602, 55, 473, 159, 209, 737, 165, 6, 841, 924, 733, 47, 479, 563, 134, 64, 19, 582, 204, 958, 856, 608, 156, 617, 222, 94, 848, 389, 781, 439, 978, 470, 224, 717, 773, 556, 228, 449, 601, 290, 263, 419, 399, 603, 730, 364, 700, 239, 161, 687, 274, 783, 379, 620, 768, 389, 815, 657, 304, 495, 159, 538, 881, 813, 783, 246, 605, 541, 941, 19, 585, 127, 522, 688, 970, 85, 863, 37, 573, 167, 898, 147, 825, 57, 854, 431, 134, 31, 397, 769, 166, 301, 17, 794, 655, 798, 917, 993, 620, 530, 666, 499, 593, 11, 914, 235, 491, 477, 105, 444, 812, 261, 169, 141, 364, 608, 272, 18, 144, 841, 651, 556, 95, 842, 970, 576, 723, 233, 575, 639, 51, 568, 753, 707, 618, 908, 691, 22, 696, 175, 611, 545, 917, 170, 826, 881, 579, 269, 130, 835, 388, 613, 721, 833, 700, 628, 246, 8, 48, 231, 831, 851, 135, 27, 424, 926, 792, 6, 913, 8, 231, 108, 743, 94, 770, 298, 561, 63, 639, 134, 126, 377, 913, 282, 445, 316, 67, 362, 399, 635, 957, 183, 421, 230, 141, 933, 116, 477, 837, 692, 139, 89, 136, 736, 649, 387, 848, 994, 483, 567, 274, 284, 613, 722, 626, 400, 171, 76, 59, 694, 198, 276, 974, 388, 435, 817, 424, 649, 959, 180, 70, 662, 283, 526, 58, 973, 773, 770, 981, 578, 416, 566, 28, 645, 236, 772, 874, 772, 105, 69, 691, 558, 362, 790, 8, 798, 813, 880, 193, 334, 460, 800, 136, 250, 630, 714, 105, 55, 755, 36, 634, 751, 379, 723, 71, 384, 623, 365, 767, 727, 555, 944, 713, 357, 40, 700, 565, 533, 98, 120, 306, 597, 291, 594, 793, 302, 708, 695, 780, 58, 912, 685, 907, 930, 220, 193, 91, 155, 221, 563, 979, 223, 319, 902, 883, 802, 719, 827, 436, 347, 557, 927, 467, 391, 644, 661, 732, 147, 280, 560, 4, 158, 498, 334, 880, 829, 554, 860, 69, 792, 8, 44, 812, 190, 419, 97, 754, 617, 57, 330, 43, 769, 71, 306, 318, 487, 385, 441, 637, 53, 966, 996, 898, 728, 545, 932, 486, 355, 689, 717, 851, 325, 194, 260, 713, 52, 847, 698, 388, 727, 807};
    int n = sizeof(a) / sizeof(a[0]);

    run_function_with_time_calculator(a, n, &getSum);

    return 0;
}